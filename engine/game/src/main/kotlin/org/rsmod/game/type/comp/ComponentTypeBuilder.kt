package org.rsmod.game.type.comp

@DslMarker private annotation class ComponentBuilderDsl

@ComponentBuilderDsl
public class ComponentTypeBuilder(public var internal: String? = null) {
    public var v3: Boolean? = null
    public var type: Int? = null
    public var buttonType: Int? = null
    public var contentType: Int? = null
    public var x: Int? = null
    public var y: Int? = null
    public var width: Int? = null
    public var height: Int? = null
    public var trans1: Int? = null
    public var layer: Int? = null
    public var mouseOverRedirect: Int? = null
    public var cs1Comparisons: ShortArray? = null
    public var cs1ComparisonValues: IntArray? = null
    public var cs1Instructions: Array<IntArray>? = null
    public var scrollHeight: Int? = null
    public var hide: Boolean? = null
    public var fill: Boolean? = null
    public var textAlignH: Int? = null
    public var textAlignV: Int? = null
    public var textLineHeight: Int? = null
    public var textFont: Int? = null
    public var textShadow: Boolean? = null
    public var secondaryText: String? = null
    public var colour1: Int? = null
    public var colour2: Int? = null
    public var mouseOverColour1: Int? = null
    public var mouseOverColour2: Int? = null
    public var graphic: Int? = null
    public var secondaryGraphic: Int? = null
    public var modelKind: Int? = null
    public var model: Int? = null
    public var secondaryModelKind: Int? = null
    public var secondaryModel: Int? = null
    public var modelAnim: Int? = null
    public var secondaryModelAnim: Int? = null
    public var modelZoom: Int? = null
    public var modelAngleX: Int? = null
    public var modelAngleY: Int? = null
    public var text: String? = null
    public var targetVerb: String? = null
    public var targetBase: String? = null
    public var events: Int? = null
    public var buttonText: String? = null
    public var widthMode: Int? = null
    public var heightMode: Int? = null
    public var xMode: Int? = null
    public var yMode: Int? = null
    public var scrollWidth: Int? = null
    public var noClickThrough: Boolean? = null
    public var angle2d: Int? = null
    public var tiling: Boolean? = null
    public var outline: Int? = null
    public var graphicShadow: Int? = null
    public var vFlip: Boolean? = null
    public var hFlip: Boolean? = null
    public var modelX: Int? = null
    public var modelY: Int? = null
    public var modelAngleZ: Int? = null
    public var modelOrthog: Boolean? = null
    public var modelObjWidth: Int? = null
    public var lineWid: Int? = null
    public var lineDirection: Boolean? = null
    public var opBase: String? = null
    public var op: Array<String> = arrayOf()
    public var dragDeadZone: Int? = null
    public var dragDeadTime: Int? = null
    public var draggableBehavior: Boolean? = null
    public var onLoad: Array<Any>? = null
    public var onMouseOver: Array<Any>? = null
    public var onMouseLeave: Array<Any>? = null
    public var onTargetLeave: Array<Any>? = null
    public var onTargetEnter: Array<Any>? = null
    public var onVarTransmit: Array<Any>? = null
    public var onInvTransmit: Array<Any>? = null
    public var onStatTransmit: Array<Any>? = null
    public var onTimer: Array<Any>? = null
    public var onOp: Array<Any>? = null
    public var onMouseRepeat: Array<Any>? = null
    public var onClick: Array<Any>? = null
    public var onClickRepeat: Array<Any>? = null
    public var onRelease: Array<Any>? = null
    public var onHold: Array<Any>? = null
    public var onDrag: Array<Any>? = null
    public var onDragComplete: Array<Any>? = null
    public var onScrollWheel: Array<Any>? = null
    public var onVarTransmitList: IntArray? = null
    public var onInvTransmitList: IntArray? = null
    public var onStatTransmitList: IntArray? = null

    public fun build(id: Int): UnpackedComponentType {
        val internal = checkNotNull(internal) { "`internal` must be set." }
        val v3 = checkNotNull(v3) { "`v3` must be set." }
        val type = type ?: 0
        val buttonType = buttonType ?: 0
        val contentType = contentType ?: 0
        val x = x ?: 0
        val y = y ?: 0
        val width = width ?: 0
        val height = height ?: 0
        val trans1 = trans1 ?: 0
        val layer = layer ?: DEFAULT_LAYER
        val mouseOverRedirect = mouseOverRedirect ?: DEFAULT_MOUSE_OVER_REDIRECT
        val scrollHeight = scrollHeight ?: 0
        val hide = hide == true
        val fill = fill == true
        val textAlignH = textAlignH ?: 0
        val textAlignV = textAlignV ?: 0
        val textLineHeight = textLineHeight ?: 0
        val textFont = textFont ?: DEFAULT_TEXT_FONT
        val textShadow = textShadow == true
        val secondaryText = secondaryText ?: DEFAULT_EMPTY_TEXT
        val colour1 = colour1 ?: 0
        val colour2 = colour2 ?: 0
        val mouseOverColour1 = mouseOverColour1 ?: 0
        val mouseOverColour2 = mouseOverColour2 ?: 0
        val graphic = graphic ?: DEFAULT_GRAPHIC
        val secondaryGraphic = secondaryGraphic ?: DEFAULT_SECONDARY_GRAPHIC
        val modelKind = modelKind ?: DEFAULT_MODEL_KIND
        val model = model ?: DEFAULT_MODEL
        val secondaryModelKind = secondaryModelKind ?: DEFAULT_SECONDARY_MODEL_KIND
        val secondaryModel = secondaryModel ?: DEFAULT_SECONDARY_MODEL
        val modelAnim = modelAnim ?: DEFAULT_MODEL_ANIM
        val secondaryModelAnim = secondaryModelAnim ?: DEFAULT_SECONDARY_MODEL_ANIM
        val modelZoom = modelZoom ?: DEFAULT_MODEL_ZOOM
        val modelAngleX = modelAngleX ?: 0
        val modelAngleY = modelAngleY ?: 0
        val text = text ?: DEFAULT_EMPTY_TEXT
        val targetVerb = targetVerb ?: DEFAULT_EMPTY_TEXT
        val targetBase = targetBase ?: DEFAULT_EMPTY_TEXT
        val events = events ?: 0
        val buttonText = buttonText ?: DEFAULT_BUTTON_TEXT
        val widthMode = widthMode ?: 0
        val heightMode = heightMode ?: 0
        val xMode = xMode ?: 0
        val yMode = yMode ?: 0
        val scrollWidth = scrollWidth ?: 0
        val noClickThrough = noClickThrough == true
        val angle2d = angle2d ?: 0
        val tiling = tiling == true
        val outline = outline ?: 0
        val graphicShadow = graphicShadow ?: 0
        val vFlip = vFlip == true
        val hFlip = hFlip == true
        val modelX = modelX ?: 0
        val modelY = modelY ?: 0
        val modelAngleZ = modelAngleZ ?: 0
        val modelOrthog = modelOrthog == true
        val modelObjWidth = modelObjWidth ?: 0
        val lineWid = lineWid ?: DEFAULT_LINE_WID
        val lineDirection = lineDirection == true
        val opBase = opBase ?: DEFAULT_EMPTY_TEXT
        val dragDeadZone = dragDeadZone ?: 0
        val dragDeadTime = dragDeadTime ?: 0
        val draggableBehavior = draggableBehavior == true
        return UnpackedComponentType(
            v3 = v3,
            type = type,
            buttonType = buttonType,
            clientCode = contentType,
            x = x,
            y = y,
            width = width,
            height = height,
            trans1 = trans1,
            layer = layer,
            mouseOverRedirect = mouseOverRedirect,
            cs1Comparisons = cs1Comparisons,
            cs1ComparisonValues = cs1ComparisonValues,
            cs1Instructions = cs1Instructions,
            scrollHeight = scrollHeight,
            hide = hide,
            fill = fill,
            textAlignH = textAlignH,
            textAlignV = textAlignV,
            textLineHeight = textLineHeight,
            textFont = textFont,
            textShadow = textShadow,
            secondaryText = secondaryText,
            colour1 = colour1,
            colour2 = colour2,
            mouseOverColour1 = mouseOverColour1,
            mouseOverColour2 = mouseOverColour2,
            graphic = graphic,
            secondaryGraphic = secondaryGraphic,
            modelKind = modelKind,
            model = model,
            secondaryModelKind = secondaryModelKind,
            secondaryModel = secondaryModel,
            modelAnim = modelAnim,
            secondaryModelAnim = secondaryModelAnim,
            modelZoom = modelZoom,
            modelAngleX = modelAngleX,
            modelAngleY = modelAngleY,
            text = text,
            targetVerb = targetVerb,
            targetBase = targetBase,
            events = events,
            buttonText = buttonText,
            widthMode = widthMode,
            heightMode = heightMode,
            xMode = xMode,
            yMode = yMode,
            scrollWidth = scrollWidth,
            noClickThrough = noClickThrough,
            angle2d = angle2d,
            tiling = tiling,
            outline = outline,
            graphicShadow = graphicShadow,
            vFlip = vFlip,
            hFlip = hFlip,
            modelX = modelX,
            modelY = modelY,
            modelAngleZ = modelAngleZ,
            modelOrthog = modelOrthog,
            modelObjWidth = modelObjWidth,
            lineWid = lineWid,
            lineDirection = lineDirection,
            opBase = opBase,
            op = op,
            dragDeadZone = dragDeadZone,
            dragDeadTime = dragDeadTime,
            draggableBehavior = draggableBehavior,
            onLoad = onLoad,
            onMouseOver = onMouseOver,
            onMouseLeave = onMouseLeave,
            onTargetLeave = onTargetLeave,
            onTargetEnter = onTargetEnter,
            onVarTransmit = onVarTransmit,
            onInvTransmit = onInvTransmit,
            onStatTransmit = onStatTransmit,
            onTimer = onTimer,
            onOp = onOp,
            onMouseRepeat = onMouseRepeat,
            onClick = onClick,
            onClickRepeat = onClickRepeat,
            onRelease = onRelease,
            onHold = onHold,
            onDrag = onDrag,
            onDragComplete = onDragComplete,
            onScrollWheel = onScrollWheel,
            onVarTransmitList = onVarTransmitList,
            onInvTransmitList = onInvTransmitList,
            onStatTransmitList = onStatTransmitList,
            internalId = id,
            internalName = internal,
        )
    }

    public companion object {
        public const val DEFAULT_LINE_WID: Int = 1
        public const val DEFAULT_GRAPHIC: Int = -1
        public const val DEFAULT_SECONDARY_GRAPHIC: Int = -1
        public const val DEFAULT_MODEL_KIND: Int = 1
        public const val DEFAULT_MODEL: Int = -1
        public const val DEFAULT_SECONDARY_MODEL_KIND: Int = 1
        public const val DEFAULT_SECONDARY_MODEL: Int = -1
        public const val DEFAULT_MODEL_ANIM: Int = -1
        public const val DEFAULT_SECONDARY_MODEL_ANIM: Int = -1
        public const val DEFAULT_MODEL_ZOOM: Int = 100
        public const val DEFAULT_TEXT_FONT: Int = -1
        public const val DEFAULT_MOUSE_OVER_REDIRECT: Int = -1
        public const val DEFAULT_BUTTON_TEXT: String = "Ok"
        public const val DEFAULT_LAYER: Int = -1
        public const val DEFAULT_EMPTY_TEXT: String = ""
    }
}
